apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'

def packageName = 'com.wandera.android'

buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.google.com' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.0'
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.5.4"
    }
}

android {
    compileSdkVersion 25
    // gradle plugin > 3.0.0 uses its own version
//    buildToolsVersion "26.0.2"

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 22
        archivesBaseName = "sliding-menu"
        version "1.2"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
        }
    }

    sourceSets {
        main {
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']

            manifest.srcFile 'AndroidManifest.xml'
        }
    }

    libraryVariants.all { variant ->
        println "variant: " + variant.baseName
        variant.outputs.all { output ->
            if (outputFile != null && outputFileName.endsWith('.aar')) {
                // LibraryVariant object does not have #versionNameSuffix
                def suffix = variant.baseName == "debug" ? "-SNAPSHOT" : ""
                outputFileName = "${archivesBaseName}-${version}${suffix}.aar"
                println "outputFileName: " + outputFileName
            }
        }
    }

}

dependencies {
    implementation 'com.android.support:support-v4:25.3.1'
}

publishing {
    repositories {
        maven {
            credentials {
                username "${artifactory_user}"
                password "${artifactory_password}"
            }
            url "${artifactory_contextUrl}/libs-release-local"
        }
    }
    publications {
        aar(MavenPublication) {
            groupId = packageName
            artifactId = archivesBaseName
            def targetFile = "$buildDir/outputs/aar/${archivesBaseName}-${version}.aar"
            println "publish source: " + targetFile
            // Tell maven to prepare the generated "*.aar" file for publishing
            artifact(targetFile)
        }
    }
}

